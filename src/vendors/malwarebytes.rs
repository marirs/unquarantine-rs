use crate::{utils::rc4_decrypt, Result};
use md5::Digest;

/// MalwareBytes Data & Quarantine files (QUAR)
pub fn unquarantine(data: &Vec<u8>) -> Result<Vec<Vec<u8>>> {
    let mut data = data.clone();
    let mut sbox = ksa();
    let outdata = rc4_decrypt(&mut sbox, &mut data);
    Ok(vec![outdata])
}

fn ksa() -> Vec<u8> {
    let mut hasher = md5::Md5::new();
    hasher.update(b"XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb");
    let key = hasher.finalize().to_vec();
    let mut sbox: Vec<u8> = (0..=255).collect();
    let mut j = 0 as usize;
    for i in 0..256 {
        j = (j + sbox[i] as usize + key[i % key.len()] as usize) % 256;
        let tmp = sbox[i];
        sbox[i] = sbox[j];
        sbox[j] = tmp;
    }
    sbox
}
